version: "3.9"

networks:
  data_preparation_proxy:
    name: data_preparation_proxy
volumes:
  goat_data_preparation:
  3dcity_db:

services:
  app:
    image: ${DOCKER_ID}/${COMPOSE_PROJECT_NAME}:app-${PROJECT_VERSION}
    build:
      context: .
      args:
        INSTALL_DEV: ${INSTALL_DEV-true}
        INSTALL_JUPYTER: ${INSTALL_JUPYTER-true}
    container_name: ${COMPOSE_PROJECT_NAME}_app
    hostname: ${COMPOSE_PROJECT_NAME}_app
    env_file:
      - .env
    environment:
      - POSTGRES_PASS=${POSTGRES_PASSWORD}
      - PGPASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - PGUSER=${POSTGRES_USER}
      - POSTGRES_DBNAME=goat
      - PGDATABASE=goat
      - PGHOST=${COMPOSE_PROJECT_NAME}_db
      - DATABASE_URL=postgis://${POSTGRES_USER}:${POSTGRES_PASSWORD}@goat_db:5432/goat
      - JUPYTER=jupyter lab --ip=0.0.0.0 --allow-root --NotebookApp.custom_display_url=http://127.0.0.1:8888
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
      - AWS_BUCKET_NAME=${AWS_BUCKET_NAME}
    volumes:
      - .:/app
    networks:
      data_preparation_proxy:

  db:
    image: postgis/postgis:14-3.2
    container_name: ${COMPOSE_PROJECT_NAME}_db
    hostname: ${COMPOSE_PROJECT_NAME}_db
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - DATABASE_URL=postgis://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${COMPOSE_PROJECT_NAME}_db:5432/${COMPOSE_PROJECT_NAME}
    volumes:
      - goat_data_preparation:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_OUTER_PORT}:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: on-failure
    networks:
      data_preparation_proxy:


  
  # 3dcity:
  #   image: 3dcitydb/3dcitydb-pg
  #   environment:
  #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD_3DCITY}
  #     - POSTGRES_USER=${POSTGRES_USER_3DCITY}
  #     - POSTGRES_DB=${POSTGRES_DB_3DCITY}
  #     - POSTGIS_SFCGAL_3DCITY=true
  #     - SRID={$SRID}
  #     - HEIGHT_EPSG={$HEIGHT_EPSG}
  #     - GMLSRSNAME={$GMLSRSNAME}

  #   ports:
  #     - "${POSTGRES_OUTER_PORT_3DCITY}:5432"

  #   volumes:
  #     - 3dcity_db:/var/lib/postgresql
  #   restart: on-failure
  #   networks:
  #     data_preparation_proxy:

